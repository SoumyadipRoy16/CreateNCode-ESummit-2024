/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/eth-json-rpc-middleware";
exports.ids = ["vendor-chunks/eth-json-rpc-middleware"];
exports.modules = {

/***/ "(ssr)/../node_modules/eth-json-rpc-middleware/block-cache.js":
/*!**************************************************************!*\
  !*** ../node_modules/eth-json-rpc-middleware/block-cache.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const cacheUtils = __webpack_require__(/*! ./cache-utils.js */ \"(ssr)/../node_modules/eth-json-rpc-middleware/cache-utils.js\")\nconst createAsyncMiddleware = __webpack_require__(/*! json-rpc-engine/src/createAsyncMiddleware */ \"(ssr)/../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createAsyncMiddleware.js\")\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [undefined, null, '\\u003cnil\\u003e']\n\nmodule.exports = createBlockCacheMiddleware\n\n\nfunction createBlockCacheMiddleware(opts = {}) {\n  // validate options\n  const { blockTracker } = opts\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified')\n\n  // create caching strategies\n  const blockCache = new BlockCacheStrategy()\n  const strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache,\n  }\n\n  return createAsyncMiddleware(async (req, res, next) => {\n    // allow cach to be skipped if so specified\n    if (req.skipCache) {\n      return next()\n    }\n    // check type and matching strategy\n    const type = cacheUtils.cacheTypeForPayload(req)\n    const strategy = strategies[type]\n    // If there's no strategy in place, pass it down the chain.\n    if (!strategy) {\n      return next()\n    }\n    // If the strategy can't cache this request, ignore it.\n    if (!strategy.canCacheRequest(req)) {\n      return next()\n    }\n\n    // get block reference (number or keyword)\n    let blockTag = cacheUtils.blockTagForPayload(req)\n    if (!blockTag) blockTag = 'latest'\n\n    // get exact block number\n    let requestedBlockNumber\n    if (blockTag === 'earliest') {\n      // this just exists for symmetry with \"latest\"\n      requestedBlockNumber = '0x00'\n    } else if (blockTag === 'latest') {\n      // fetch latest block number\n      const latestBlockNumber = await blockTracker.getLatestBlock()\n      // clear all cache before latest block\n      blockCache.clearBefore(latestBlockNumber)\n      requestedBlockNumber = latestBlockNumber\n    } else {\n      // We have a hex number\n      requestedBlockNumber = blockTag\n    }\n\n    // end on a hit, continue on a miss\n    const cacheResult = await strategy.get(req, requestedBlockNumber)\n    if (cacheResult === undefined) {\n      // cache miss\n      // wait for other middleware to handle request\n      await next()\n      // add result to cache\n      await strategy.set(req, requestedBlockNumber, res.result)\n    } else {\n      // fill in result from cache\n      res.result = cacheResult\n    }\n  })\n}\n\n\n//\n// Cache Strategies\n//\n\nclass BlockCacheStrategy {\n  \n  constructor () {\n    this.cache = {}\n  }\n\n  getBlockCacheForPayload (payload, blockNumberHex) {\n    const blockNumber = Number.parseInt(blockNumberHex, 16)\n    let blockCache = this.cache[blockNumber]\n    // create new cache if necesary\n    if (!blockCache) {\n      const newCache = {}\n      this.cache[blockNumber] = newCache\n      blockCache = newCache\n    }\n    return blockCache\n  }\n\n  async get (payload, requestedBlockNumber) {\n    // lookup block cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    if (!blockCache) return\n    // lookup payload in block cache\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    const cached = blockCache[identifier]\n    // may be undefined\n    return cached\n  }\n\n  async set (payload, requestedBlockNumber, result) {\n    // check if we can cached this result\n    const canCache = this.canCacheResult(payload, result)\n    if (!canCache) return\n    // set the value in the cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    blockCache[identifier] = result\n  }\n\n  canCacheRequest (payload) {\n    // check request method\n    if (!cacheUtils.canCache(payload)) {\n      return false\n    }\n    // check blockTag\n    const blockTag = cacheUtils.blockTagForPayload(payload)\n    if (blockTag === 'pending') {\n      return false\n    }\n    // can be cached\n    return true\n  }\n\n  canCacheResult (payload, result) {\n    // never cache empty values (e.g. undefined)\n    if (emptyValues.includes(result)) return\n    // check if transactions have block reference before caching\n    if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n      if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n        return false\n      }\n    }\n    // otherwise true\n    return true\n  }\n\n  // removes all block caches with block number lower than `oldBlockHex`\n  clearBefore (oldBlockHex){\n    const self = this\n    const oldBlockNumber = Number.parseInt(oldBlockHex, 16)\n    // clear old caches\n    Object.keys(self.cache)\n      .map(Number)\n      .filter(num => num < oldBlockNumber)\n      .forEach(num => delete self.cache[num])\n  }\n\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL2Jsb2NrLWNhY2hlLmpzIiwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLHNGQUFrQjtBQUM3Qyw4QkFBOEIsbUJBQU8sQ0FBQywwSkFBMkM7QUFDakY7QUFDQTs7QUFFQTs7O0FBR0EsNkNBQTZDO0FBQzdDO0FBQ0EsVUFBVSxlQUFlO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWJoYW1yYWtzaGl0L0Rlc2t0b3AvQ3JlYXRlTkNvZGUtRVN1bW1pdC0yMDI0L25vZGVfbW9kdWxlcy9ldGgtanNvbi1ycGMtbWlkZGxld2FyZS9ibG9jay1jYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjYWNoZVV0aWxzID0gcmVxdWlyZSgnLi9jYWNoZS11dGlscy5qcycpXG5jb25zdCBjcmVhdGVBc3luY01pZGRsZXdhcmUgPSByZXF1aXJlKCdqc29uLXJwYy1lbmdpbmUvc3JjL2NyZWF0ZUFzeW5jTWlkZGxld2FyZScpXG4vLyBgPG5pbD5gIGNvbWVzIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2dvLWV0aGVyZXVtL2lzc3Vlcy8xNjkyNVxuY29uc3QgZW1wdHlWYWx1ZXMgPSBbdW5kZWZpbmVkLCBudWxsLCAnXFx1MDAzY25pbFxcdTAwM2UnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUJsb2NrQ2FjaGVNaWRkbGV3YXJlXG5cblxuZnVuY3Rpb24gY3JlYXRlQmxvY2tDYWNoZU1pZGRsZXdhcmUob3B0cyA9IHt9KSB7XG4gIC8vIHZhbGlkYXRlIG9wdGlvbnNcbiAgY29uc3QgeyBibG9ja1RyYWNrZXIgfSA9IG9wdHNcbiAgaWYgKCFibG9ja1RyYWNrZXIpIHRocm93IG5ldyBFcnJvcignY3JlYXRlQmxvY2tDYWNoZU1pZGRsZXdhcmUgLSBObyBCbG9ja1RyYWNrZXIgc3BlY2lmaWVkJylcblxuICAvLyBjcmVhdGUgY2FjaGluZyBzdHJhdGVnaWVzXG4gIGNvbnN0IGJsb2NrQ2FjaGUgPSBuZXcgQmxvY2tDYWNoZVN0cmF0ZWd5KClcbiAgY29uc3Qgc3RyYXRlZ2llcyA9IHtcbiAgICBwZXJtYTogYmxvY2tDYWNoZSxcbiAgICBibG9jazogYmxvY2tDYWNoZSxcbiAgICBmb3JrOiBibG9ja0NhY2hlLFxuICB9XG5cbiAgcmV0dXJuIGNyZWF0ZUFzeW5jTWlkZGxld2FyZShhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAvLyBhbGxvdyBjYWNoIHRvIGJlIHNraXBwZWQgaWYgc28gc3BlY2lmaWVkXG4gICAgaWYgKHJlcS5za2lwQ2FjaGUpIHtcbiAgICAgIHJldHVybiBuZXh0KClcbiAgICB9XG4gICAgLy8gY2hlY2sgdHlwZSBhbmQgbWF0Y2hpbmcgc3RyYXRlZ3lcbiAgICBjb25zdCB0eXBlID0gY2FjaGVVdGlscy5jYWNoZVR5cGVGb3JQYXlsb2FkKHJlcSlcbiAgICBjb25zdCBzdHJhdGVneSA9IHN0cmF0ZWdpZXNbdHlwZV1cbiAgICAvLyBJZiB0aGVyZSdzIG5vIHN0cmF0ZWd5IGluIHBsYWNlLCBwYXNzIGl0IGRvd24gdGhlIGNoYWluLlxuICAgIGlmICghc3RyYXRlZ3kpIHtcbiAgICAgIHJldHVybiBuZXh0KClcbiAgICB9XG4gICAgLy8gSWYgdGhlIHN0cmF0ZWd5IGNhbid0IGNhY2hlIHRoaXMgcmVxdWVzdCwgaWdub3JlIGl0LlxuICAgIGlmICghc3RyYXRlZ3kuY2FuQ2FjaGVSZXF1ZXN0KHJlcSkpIHtcbiAgICAgIHJldHVybiBuZXh0KClcbiAgICB9XG5cbiAgICAvLyBnZXQgYmxvY2sgcmVmZXJlbmNlIChudW1iZXIgb3Iga2V5d29yZClcbiAgICBsZXQgYmxvY2tUYWcgPSBjYWNoZVV0aWxzLmJsb2NrVGFnRm9yUGF5bG9hZChyZXEpXG4gICAgaWYgKCFibG9ja1RhZykgYmxvY2tUYWcgPSAnbGF0ZXN0J1xuXG4gICAgLy8gZ2V0IGV4YWN0IGJsb2NrIG51bWJlclxuICAgIGxldCByZXF1ZXN0ZWRCbG9ja051bWJlclxuICAgIGlmIChibG9ja1RhZyA9PT0gJ2VhcmxpZXN0Jykge1xuICAgICAgLy8gdGhpcyBqdXN0IGV4aXN0cyBmb3Igc3ltbWV0cnkgd2l0aCBcImxhdGVzdFwiXG4gICAgICByZXF1ZXN0ZWRCbG9ja051bWJlciA9ICcweDAwJ1xuICAgIH0gZWxzZSBpZiAoYmxvY2tUYWcgPT09ICdsYXRlc3QnKSB7XG4gICAgICAvLyBmZXRjaCBsYXRlc3QgYmxvY2sgbnVtYmVyXG4gICAgICBjb25zdCBsYXRlc3RCbG9ja051bWJlciA9IGF3YWl0IGJsb2NrVHJhY2tlci5nZXRMYXRlc3RCbG9jaygpXG4gICAgICAvLyBjbGVhciBhbGwgY2FjaGUgYmVmb3JlIGxhdGVzdCBibG9ja1xuICAgICAgYmxvY2tDYWNoZS5jbGVhckJlZm9yZShsYXRlc3RCbG9ja051bWJlcilcbiAgICAgIHJlcXVlc3RlZEJsb2NrTnVtYmVyID0gbGF0ZXN0QmxvY2tOdW1iZXJcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gV2UgaGF2ZSBhIGhleCBudW1iZXJcbiAgICAgIHJlcXVlc3RlZEJsb2NrTnVtYmVyID0gYmxvY2tUYWdcbiAgICB9XG5cbiAgICAvLyBlbmQgb24gYSBoaXQsIGNvbnRpbnVlIG9uIGEgbWlzc1xuICAgIGNvbnN0IGNhY2hlUmVzdWx0ID0gYXdhaXQgc3RyYXRlZ3kuZ2V0KHJlcSwgcmVxdWVzdGVkQmxvY2tOdW1iZXIpXG4gICAgaWYgKGNhY2hlUmVzdWx0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIGNhY2hlIG1pc3NcbiAgICAgIC8vIHdhaXQgZm9yIG90aGVyIG1pZGRsZXdhcmUgdG8gaGFuZGxlIHJlcXVlc3RcbiAgICAgIGF3YWl0IG5leHQoKVxuICAgICAgLy8gYWRkIHJlc3VsdCB0byBjYWNoZVxuICAgICAgYXdhaXQgc3RyYXRlZ3kuc2V0KHJlcSwgcmVxdWVzdGVkQmxvY2tOdW1iZXIsIHJlcy5yZXN1bHQpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGZpbGwgaW4gcmVzdWx0IGZyb20gY2FjaGVcbiAgICAgIHJlcy5yZXN1bHQgPSBjYWNoZVJlc3VsdFxuICAgIH1cbiAgfSlcbn1cblxuXG4vL1xuLy8gQ2FjaGUgU3RyYXRlZ2llc1xuLy9cblxuY2xhc3MgQmxvY2tDYWNoZVN0cmF0ZWd5IHtcbiAgXG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICB0aGlzLmNhY2hlID0ge31cbiAgfVxuXG4gIGdldEJsb2NrQ2FjaGVGb3JQYXlsb2FkIChwYXlsb2FkLCBibG9ja051bWJlckhleCkge1xuICAgIGNvbnN0IGJsb2NrTnVtYmVyID0gTnVtYmVyLnBhcnNlSW50KGJsb2NrTnVtYmVySGV4LCAxNilcbiAgICBsZXQgYmxvY2tDYWNoZSA9IHRoaXMuY2FjaGVbYmxvY2tOdW1iZXJdXG4gICAgLy8gY3JlYXRlIG5ldyBjYWNoZSBpZiBuZWNlc2FyeVxuICAgIGlmICghYmxvY2tDYWNoZSkge1xuICAgICAgY29uc3QgbmV3Q2FjaGUgPSB7fVxuICAgICAgdGhpcy5jYWNoZVtibG9ja051bWJlcl0gPSBuZXdDYWNoZVxuICAgICAgYmxvY2tDYWNoZSA9IG5ld0NhY2hlXG4gICAgfVxuICAgIHJldHVybiBibG9ja0NhY2hlXG4gIH1cblxuICBhc3luYyBnZXQgKHBheWxvYWQsIHJlcXVlc3RlZEJsb2NrTnVtYmVyKSB7XG4gICAgLy8gbG9va3VwIGJsb2NrIGNhY2hlXG4gICAgY29uc3QgYmxvY2tDYWNoZSA9IHRoaXMuZ2V0QmxvY2tDYWNoZUZvclBheWxvYWQocGF5bG9hZCwgcmVxdWVzdGVkQmxvY2tOdW1iZXIpXG4gICAgaWYgKCFibG9ja0NhY2hlKSByZXR1cm5cbiAgICAvLyBsb29rdXAgcGF5bG9hZCBpbiBibG9jayBjYWNoZVxuICAgIGNvbnN0IGlkZW50aWZpZXIgPSBjYWNoZVV0aWxzLmNhY2hlSWRlbnRpZmllckZvclBheWxvYWQocGF5bG9hZCwgdHJ1ZSlcbiAgICBjb25zdCBjYWNoZWQgPSBibG9ja0NhY2hlW2lkZW50aWZpZXJdXG4gICAgLy8gbWF5IGJlIHVuZGVmaW5lZFxuICAgIHJldHVybiBjYWNoZWRcbiAgfVxuXG4gIGFzeW5jIHNldCAocGF5bG9hZCwgcmVxdWVzdGVkQmxvY2tOdW1iZXIsIHJlc3VsdCkge1xuICAgIC8vIGNoZWNrIGlmIHdlIGNhbiBjYWNoZWQgdGhpcyByZXN1bHRcbiAgICBjb25zdCBjYW5DYWNoZSA9IHRoaXMuY2FuQ2FjaGVSZXN1bHQocGF5bG9hZCwgcmVzdWx0KVxuICAgIGlmICghY2FuQ2FjaGUpIHJldHVyblxuICAgIC8vIHNldCB0aGUgdmFsdWUgaW4gdGhlIGNhY2hlXG4gICAgY29uc3QgYmxvY2tDYWNoZSA9IHRoaXMuZ2V0QmxvY2tDYWNoZUZvclBheWxvYWQocGF5bG9hZCwgcmVxdWVzdGVkQmxvY2tOdW1iZXIpXG4gICAgY29uc3QgaWRlbnRpZmllciA9IGNhY2hlVXRpbHMuY2FjaGVJZGVudGlmaWVyRm9yUGF5bG9hZChwYXlsb2FkLCB0cnVlKVxuICAgIGJsb2NrQ2FjaGVbaWRlbnRpZmllcl0gPSByZXN1bHRcbiAgfVxuXG4gIGNhbkNhY2hlUmVxdWVzdCAocGF5bG9hZCkge1xuICAgIC8vIGNoZWNrIHJlcXVlc3QgbWV0aG9kXG4gICAgaWYgKCFjYWNoZVV0aWxzLmNhbkNhY2hlKHBheWxvYWQpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgLy8gY2hlY2sgYmxvY2tUYWdcbiAgICBjb25zdCBibG9ja1RhZyA9IGNhY2hlVXRpbHMuYmxvY2tUYWdGb3JQYXlsb2FkKHBheWxvYWQpXG4gICAgaWYgKGJsb2NrVGFnID09PSAncGVuZGluZycpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICAvLyBjYW4gYmUgY2FjaGVkXG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIGNhbkNhY2hlUmVzdWx0IChwYXlsb2FkLCByZXN1bHQpIHtcbiAgICAvLyBuZXZlciBjYWNoZSBlbXB0eSB2YWx1ZXMgKGUuZy4gdW5kZWZpbmVkKVxuICAgIGlmIChlbXB0eVZhbHVlcy5pbmNsdWRlcyhyZXN1bHQpKSByZXR1cm5cbiAgICAvLyBjaGVjayBpZiB0cmFuc2FjdGlvbnMgaGF2ZSBibG9jayByZWZlcmVuY2UgYmVmb3JlIGNhY2hpbmdcbiAgICBpZiAoWydldGhfZ2V0VHJhbnNhY3Rpb25CeUhhc2gnLCAnZXRoX2dldFRyYW5zYWN0aW9uUmVjZWlwdCddLmluY2x1ZGVzKHBheWxvYWQubWV0aG9kKSkge1xuICAgICAgaWYgKCFyZXN1bHQgfHwgIXJlc3VsdC5ibG9ja0hhc2ggfHwgcmVzdWx0LmJsb2NrSGFzaCA9PT0gJzB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG4gICAgfVxuICAgIC8vIG90aGVyd2lzZSB0cnVlXG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIC8vIHJlbW92ZXMgYWxsIGJsb2NrIGNhY2hlcyB3aXRoIGJsb2NrIG51bWJlciBsb3dlciB0aGFuIGBvbGRCbG9ja0hleGBcbiAgY2xlYXJCZWZvcmUgKG9sZEJsb2NrSGV4KXtcbiAgICBjb25zdCBzZWxmID0gdGhpc1xuICAgIGNvbnN0IG9sZEJsb2NrTnVtYmVyID0gTnVtYmVyLnBhcnNlSW50KG9sZEJsb2NrSGV4LCAxNilcbiAgICAvLyBjbGVhciBvbGQgY2FjaGVzXG4gICAgT2JqZWN0LmtleXMoc2VsZi5jYWNoZSlcbiAgICAgIC5tYXAoTnVtYmVyKVxuICAgICAgLmZpbHRlcihudW0gPT4gbnVtIDwgb2xkQmxvY2tOdW1iZXIpXG4gICAgICAuZm9yRWFjaChudW0gPT4gZGVsZXRlIHNlbGYuY2FjaGVbbnVtXSlcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/eth-json-rpc-middleware/block-cache.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/eth-json-rpc-middleware/cache-utils.js":
/*!**************************************************************!*\
  !*** ../node_modules/eth-json-rpc-middleware/cache-utils.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const stringify = __webpack_require__(/*! json-stable-stringify */ \"(ssr)/../node_modules/json-stable-stringify/index.js\")\n\nmodule.exports = {\n  cacheIdentifierForPayload: cacheIdentifierForPayload,\n  canCache: canCache,\n  blockTagForPayload: blockTagForPayload,\n  paramsWithoutBlockTag: paramsWithoutBlockTag,\n  blockTagParamIndex: blockTagParamIndex,\n  cacheTypeForPayload: cacheTypeForPayload\n}\n\nfunction cacheIdentifierForPayload (payload, skipBlockRef) {\n  const simpleParams = skipBlockRef ? paramsWithoutBlockTag(payload) : payload.params\n  if (canCache(payload)) {\n    return payload.method + ':' + stringify(simpleParams)\n  } else {\n    return null\n  }\n}\n\nfunction canCache (payload) {\n  return cacheTypeForPayload(payload) !== 'never'\n}\n\nfunction blockTagForPayload (payload) {\n  let index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return null\n  }\n\n  return payload.params[index]\n}\n\nfunction paramsWithoutBlockTag (payload) {\n  const index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return payload.params\n  }\n\n  // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1)\n  }\n\n  return payload.params.slice(0, index)\n}\n\nfunction blockTagParamIndex (payload) {\n  switch (payload.method) {\n    // blockTag is at index 2\n    case 'eth_getStorageAt':\n      return 2\n    // blockTag is at index 1\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n      return 1\n    // blockTag is at index 0\n    case 'eth_getBlockByNumber':\n      return 0\n    // there is no blockTag\n    default:\n      return undefined\n  }\n}\n\nfunction cacheTypeForPayload (payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n    case 'test_permaCache':\n      return 'perma'\n\n    // cache until fork\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n    case 'test_forkCache':\n      return 'fork'\n\n    // cache for block\n    case 'eth_gasPrice':\n    case 'eth_blockNumber':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'test_blockCache':\n      return 'block'\n\n    // never cache\n    case 'net_version':\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n    case 'test_neverCache':\n      return 'never'\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL2NhY2hlLXV0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLG1GQUF1Qjs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc3ViaGFtcmFrc2hpdC9EZXNrdG9wL0NyZWF0ZU5Db2RlLUVTdW1taXQtMjAyNC9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLW1pZGRsZXdhcmUvY2FjaGUtdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc3RyaW5naWZ5ID0gcmVxdWlyZSgnanNvbi1zdGFibGUtc3RyaW5naWZ5JylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNhY2hlSWRlbnRpZmllckZvclBheWxvYWQ6IGNhY2hlSWRlbnRpZmllckZvclBheWxvYWQsXG4gIGNhbkNhY2hlOiBjYW5DYWNoZSxcbiAgYmxvY2tUYWdGb3JQYXlsb2FkOiBibG9ja1RhZ0ZvclBheWxvYWQsXG4gIHBhcmFtc1dpdGhvdXRCbG9ja1RhZzogcGFyYW1zV2l0aG91dEJsb2NrVGFnLFxuICBibG9ja1RhZ1BhcmFtSW5kZXg6IGJsb2NrVGFnUGFyYW1JbmRleCxcbiAgY2FjaGVUeXBlRm9yUGF5bG9hZDogY2FjaGVUeXBlRm9yUGF5bG9hZFxufVxuXG5mdW5jdGlvbiBjYWNoZUlkZW50aWZpZXJGb3JQYXlsb2FkIChwYXlsb2FkLCBza2lwQmxvY2tSZWYpIHtcbiAgY29uc3Qgc2ltcGxlUGFyYW1zID0gc2tpcEJsb2NrUmVmID8gcGFyYW1zV2l0aG91dEJsb2NrVGFnKHBheWxvYWQpIDogcGF5bG9hZC5wYXJhbXNcbiAgaWYgKGNhbkNhY2hlKHBheWxvYWQpKSB7XG4gICAgcmV0dXJuIHBheWxvYWQubWV0aG9kICsgJzonICsgc3RyaW5naWZ5KHNpbXBsZVBhcmFtcylcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5cbmZ1bmN0aW9uIGNhbkNhY2hlIChwYXlsb2FkKSB7XG4gIHJldHVybiBjYWNoZVR5cGVGb3JQYXlsb2FkKHBheWxvYWQpICE9PSAnbmV2ZXInXG59XG5cbmZ1bmN0aW9uIGJsb2NrVGFnRm9yUGF5bG9hZCAocGF5bG9hZCkge1xuICBsZXQgaW5kZXggPSBibG9ja1RhZ1BhcmFtSW5kZXgocGF5bG9hZClcblxuICAvLyBCbG9jayB0YWcgcGFyYW0gbm90IHBhc3NlZC5cbiAgaWYgKGluZGV4ID49IHBheWxvYWQucGFyYW1zLmxlbmd0aCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICByZXR1cm4gcGF5bG9hZC5wYXJhbXNbaW5kZXhdXG59XG5cbmZ1bmN0aW9uIHBhcmFtc1dpdGhvdXRCbG9ja1RhZyAocGF5bG9hZCkge1xuICBjb25zdCBpbmRleCA9IGJsb2NrVGFnUGFyYW1JbmRleChwYXlsb2FkKVxuXG4gIC8vIEJsb2NrIHRhZyBwYXJhbSBub3QgcGFzc2VkLlxuICBpZiAoaW5kZXggPj0gcGF5bG9hZC5wYXJhbXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHBheWxvYWQucGFyYW1zXG4gIH1cblxuICAvLyBldGhfZ2V0QmxvY2tCeU51bWJlciBoYXMgdGhlIGJsb2NrIHRhZyBmaXJzdCwgdGhlbiB0aGUgb3B0aW9uYWwgaW5jbHVkZVR4PyBwYXJhbVxuICBpZiAocGF5bG9hZC5tZXRob2QgPT09ICdldGhfZ2V0QmxvY2tCeU51bWJlcicpIHtcbiAgICByZXR1cm4gcGF5bG9hZC5wYXJhbXMuc2xpY2UoMSlcbiAgfVxuXG4gIHJldHVybiBwYXlsb2FkLnBhcmFtcy5zbGljZSgwLCBpbmRleClcbn1cblxuZnVuY3Rpb24gYmxvY2tUYWdQYXJhbUluZGV4IChwYXlsb2FkKSB7XG4gIHN3aXRjaCAocGF5bG9hZC5tZXRob2QpIHtcbiAgICAvLyBibG9ja1RhZyBpcyBhdCBpbmRleCAyXG4gICAgY2FzZSAnZXRoX2dldFN0b3JhZ2VBdCc6XG4gICAgICByZXR1cm4gMlxuICAgIC8vIGJsb2NrVGFnIGlzIGF0IGluZGV4IDFcbiAgICBjYXNlICdldGhfZ2V0QmFsYW5jZSc6XG4gICAgY2FzZSAnZXRoX2dldENvZGUnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkNvdW50JzpcbiAgICBjYXNlICdldGhfY2FsbCc6XG4gICAgICByZXR1cm4gMVxuICAgIC8vIGJsb2NrVGFnIGlzIGF0IGluZGV4IDBcbiAgICBjYXNlICdldGhfZ2V0QmxvY2tCeU51bWJlcic6XG4gICAgICByZXR1cm4gMFxuICAgIC8vIHRoZXJlIGlzIG5vIGJsb2NrVGFnXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5mdW5jdGlvbiBjYWNoZVR5cGVGb3JQYXlsb2FkIChwYXlsb2FkKSB7XG4gIHN3aXRjaCAocGF5bG9hZC5tZXRob2QpIHtcbiAgICAvLyBjYWNoZSBwZXJtYW5lbnRseVxuICAgIGNhc2UgJ3dlYjNfY2xpZW50VmVyc2lvbic6XG4gICAgY2FzZSAnd2ViM19zaGEzJzpcbiAgICBjYXNlICdldGhfcHJvdG9jb2xWZXJzaW9uJzpcbiAgICBjYXNlICdldGhfZ2V0QmxvY2tUcmFuc2FjdGlvbkNvdW50QnlIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0VW5jbGVDb3VudEJ5QmxvY2tIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0Q29kZSc6XG4gICAgY2FzZSAnZXRoX2dldEJsb2NrQnlIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0VHJhbnNhY3Rpb25CeUhhc2gnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkJ5QmxvY2tIYXNoQW5kSW5kZXgnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvblJlY2VpcHQnOlxuICAgIGNhc2UgJ2V0aF9nZXRVbmNsZUJ5QmxvY2tIYXNoQW5kSW5kZXgnOlxuICAgIGNhc2UgJ2V0aF9nZXRDb21waWxlcnMnOlxuICAgIGNhc2UgJ2V0aF9jb21waWxlTExMJzpcbiAgICBjYXNlICdldGhfY29tcGlsZVNvbGlkaXR5JzpcbiAgICBjYXNlICdldGhfY29tcGlsZVNlcnBlbnQnOlxuICAgIGNhc2UgJ3NoaF92ZXJzaW9uJzpcbiAgICBjYXNlICd0ZXN0X3Blcm1hQ2FjaGUnOlxuICAgICAgcmV0dXJuICdwZXJtYSdcblxuICAgIC8vIGNhY2hlIHVudGlsIGZvcmtcbiAgICBjYXNlICdldGhfZ2V0QmxvY2tCeU51bWJlcic6XG4gICAgY2FzZSAnZXRoX2dldEJsb2NrVHJhbnNhY3Rpb25Db3VudEJ5TnVtYmVyJzpcbiAgICBjYXNlICdldGhfZ2V0VW5jbGVDb3VudEJ5QmxvY2tOdW1iZXInOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkJ5QmxvY2tOdW1iZXJBbmRJbmRleCc6XG4gICAgY2FzZSAnZXRoX2dldFVuY2xlQnlCbG9ja051bWJlckFuZEluZGV4JzpcbiAgICBjYXNlICd0ZXN0X2ZvcmtDYWNoZSc6XG4gICAgICByZXR1cm4gJ2ZvcmsnXG5cbiAgICAvLyBjYWNoZSBmb3IgYmxvY2tcbiAgICBjYXNlICdldGhfZ2FzUHJpY2UnOlxuICAgIGNhc2UgJ2V0aF9ibG9ja051bWJlcic6XG4gICAgY2FzZSAnZXRoX2dldEJhbGFuY2UnOlxuICAgIGNhc2UgJ2V0aF9nZXRTdG9yYWdlQXQnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkNvdW50JzpcbiAgICBjYXNlICdldGhfY2FsbCc6XG4gICAgY2FzZSAnZXRoX2VzdGltYXRlR2FzJzpcbiAgICBjYXNlICdldGhfZ2V0RmlsdGVyTG9ncyc6XG4gICAgY2FzZSAnZXRoX2dldExvZ3MnOlxuICAgIGNhc2UgJ3Rlc3RfYmxvY2tDYWNoZSc6XG4gICAgICByZXR1cm4gJ2Jsb2NrJ1xuXG4gICAgLy8gbmV2ZXIgY2FjaGVcbiAgICBjYXNlICduZXRfdmVyc2lvbic6XG4gICAgY2FzZSAnbmV0X3BlZXJDb3VudCc6XG4gICAgY2FzZSAnbmV0X2xpc3RlbmluZyc6XG4gICAgY2FzZSAnZXRoX3N5bmNpbmcnOlxuICAgIGNhc2UgJ2V0aF9zaWduJzpcbiAgICBjYXNlICdldGhfY29pbmJhc2UnOlxuICAgIGNhc2UgJ2V0aF9taW5pbmcnOlxuICAgIGNhc2UgJ2V0aF9oYXNocmF0ZSc6XG4gICAgY2FzZSAnZXRoX2FjY291bnRzJzpcbiAgICBjYXNlICdldGhfc2VuZFRyYW5zYWN0aW9uJzpcbiAgICBjYXNlICdldGhfc2VuZFJhd1RyYW5zYWN0aW9uJzpcbiAgICBjYXNlICdldGhfbmV3RmlsdGVyJzpcbiAgICBjYXNlICdldGhfbmV3QmxvY2tGaWx0ZXInOlxuICAgIGNhc2UgJ2V0aF9uZXdQZW5kaW5nVHJhbnNhY3Rpb25GaWx0ZXInOlxuICAgIGNhc2UgJ2V0aF91bmluc3RhbGxGaWx0ZXInOlxuICAgIGNhc2UgJ2V0aF9nZXRGaWx0ZXJDaGFuZ2VzJzpcbiAgICBjYXNlICdldGhfZ2V0V29yayc6XG4gICAgY2FzZSAnZXRoX3N1Ym1pdFdvcmsnOlxuICAgIGNhc2UgJ2V0aF9zdWJtaXRIYXNocmF0ZSc6XG4gICAgY2FzZSAnZGJfcHV0U3RyaW5nJzpcbiAgICBjYXNlICdkYl9nZXRTdHJpbmcnOlxuICAgIGNhc2UgJ2RiX3B1dEhleCc6XG4gICAgY2FzZSAnZGJfZ2V0SGV4JzpcbiAgICBjYXNlICdzaGhfcG9zdCc6XG4gICAgY2FzZSAnc2hoX25ld0lkZW50aXR5JzpcbiAgICBjYXNlICdzaGhfaGFzSWRlbnRpdHknOlxuICAgIGNhc2UgJ3NoaF9uZXdHcm91cCc6XG4gICAgY2FzZSAnc2hoX2FkZFRvR3JvdXAnOlxuICAgIGNhc2UgJ3NoaF9uZXdGaWx0ZXInOlxuICAgIGNhc2UgJ3NoaF91bmluc3RhbGxGaWx0ZXInOlxuICAgIGNhc2UgJ3NoaF9nZXRGaWx0ZXJDaGFuZ2VzJzpcbiAgICBjYXNlICdzaGhfZ2V0TWVzc2FnZXMnOlxuICAgIGNhc2UgJ3Rlc3RfbmV2ZXJDYWNoZSc6XG4gICAgICByZXR1cm4gJ25ldmVyJ1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/eth-json-rpc-middleware/cache-utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createAsyncMiddleware.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createAsyncMiddleware.js ***!
  \*********************************************************************************************************/
/***/ ((module) => {

eval("/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n */\n\nmodule.exports = function createAsyncMiddleware (asyncMiddleware) {\n  return (req, res, next, end) => {\n\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise\n    const nextPromise = new Promise((resolve) => {\n      resolveNextPromise = resolve\n    })\n\n    let returnHandlerCallback, nextWasCalled\n\n    const asyncNext = async () => {\n\n      nextWasCalled = true\n\n      next((callback) => { // eslint-disable-line callback-return\n        returnHandlerCallback = callback\n        resolveNextPromise()\n      })\n      await nextPromise\n    }\n\n    asyncMiddleware(req, res, asyncNext)\n      .then(async () => {\n        if (nextWasCalled) {\n          await nextPromise // we must wait until the return handler is called\n          returnHandlerCallback(null)\n        } else {\n          end(null)\n        }\n      })\n      .catch((error) => {\n        if (returnHandlerCallback) {\n          returnHandlerCallback(error)\n        } else {\n          end(error)\n        }\n      })\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvc3JjL2NyZWF0ZUFzeW5jTWlkZGxld2FyZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTs7QUFFQTs7QUFFQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc3ViaGFtcmFrc2hpdC9EZXNrdG9wL0NyZWF0ZU5Db2RlLUVTdW1taXQtMjAyNC9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLW1pZGRsZXdhcmUvbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVuZ2luZS9zcmMvY3JlYXRlQXN5bmNNaWRkbGV3YXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSnNvblJwY0VuZ2luZSBvbmx5IGFjY2VwdHMgY2FsbGJhY2stYmFzZWQgbWlkZGxld2FyZSBkaXJlY3RseS5cbiAqIGNyZWF0ZUFzeW5jTWlkZGxld2FyZSBleGlzdHMgdG8gZW5hYmxlIGNvbnN1bWVycyB0byBwYXNzIGluIGFzeW5jIG1pZGRsZXdhcmVcbiAqIGZ1bmN0aW9ucy5cbiAqXG4gKiBBc3luYyBtaWRkbGV3YXJlIGhhdmUgbm8gXCJlbmRcIiBmdW5jdGlvbi4gSW5zdGVhZCwgdGhleSBcImVuZFwiIGlmIHRoZXkgcmV0dXJuXG4gKiB3aXRob3V0IGNhbGxpbmcgXCJuZXh0XCIuIFJhdGhlciB0aGFuIHBhc3NpbmcgaW4gZXhwbGljaXQgcmV0dXJuIGhhbmRsZXJzLFxuICogYXN5bmMgbWlkZGxld2FyZSBjYW4gc2ltcGx5IGF3YWl0IFwibmV4dFwiLCBhbmQgcGVyZm9ybSBvcGVyYXRpb25zIG9uIHRoZVxuICogcmVzcG9uc2Ugb2JqZWN0IHdoZW4gZXhlY3V0aW9uIHJlc3VtZXMuXG4gKlxuICogVG8gYWNjb21wbGlzaCB0aGlzLCBjcmVhdGVBc3luY01pZGRsZXdhcmUgcGFzc2VzIHRoZSBhc3luYyBtaWRkbGV3YXJlIGFcbiAqIHdyYXBwZWQgXCJuZXh0XCIgZnVuY3Rpb24uIFRoYXQgZnVuY3Rpb24gY2FsbHMgdGhlIGludGVybmFsIEpzb25ScGNFbmdpbmVcbiAqIFwibmV4dFwiIGZ1bmN0aW9uIHdpdGggYSByZXR1cm4gaGFuZGxlciB0aGF0IHJlc29sdmVzIGEgcHJvbWlzZSB3aGVuIGNhbGxlZC5cbiAqXG4gKiBUaGUgcmV0dXJuIGhhbmRsZXIgd2lsbCBhbHdheXMgYmUgY2FsbGVkLiBJdHMgcmVzb2x1dGlvbiBvZiB0aGUgcHJvbWlzZVxuICogZW5hYmxlcyB0aGUgY29udHJvbCBmbG93IGRlc2NyaWJlZCBhYm92ZS5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUFzeW5jTWlkZGxld2FyZSAoYXN5bmNNaWRkbGV3YXJlKSB7XG4gIHJldHVybiAocmVxLCByZXMsIG5leHQsIGVuZCkgPT4ge1xuXG4gICAgLy8gbmV4dFByb21pc2UgaXMgdGhlIGtleSB0byB0aGUgaW1wbGVtZW50YXRpb25cbiAgICAvLyBpdCBpcyByZXNvbHZlZCBieSB0aGUgcmV0dXJuIGhhbmRsZXIgcGFzc2VkIHRvIHRoZVxuICAgIC8vIFwibmV4dFwiIGZ1bmN0aW9uXG4gICAgbGV0IHJlc29sdmVOZXh0UHJvbWlzZVxuICAgIGNvbnN0IG5leHRQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIHJlc29sdmVOZXh0UHJvbWlzZSA9IHJlc29sdmVcbiAgICB9KVxuXG4gICAgbGV0IHJldHVybkhhbmRsZXJDYWxsYmFjaywgbmV4dFdhc0NhbGxlZFxuXG4gICAgY29uc3QgYXN5bmNOZXh0ID0gYXN5bmMgKCkgPT4ge1xuXG4gICAgICBuZXh0V2FzQ2FsbGVkID0gdHJ1ZVxuXG4gICAgICBuZXh0KChjYWxsYmFjaykgPT4geyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNhbGxiYWNrLXJldHVyblxuICAgICAgICByZXR1cm5IYW5kbGVyQ2FsbGJhY2sgPSBjYWxsYmFja1xuICAgICAgICByZXNvbHZlTmV4dFByb21pc2UoKVxuICAgICAgfSlcbiAgICAgIGF3YWl0IG5leHRQcm9taXNlXG4gICAgfVxuXG4gICAgYXN5bmNNaWRkbGV3YXJlKHJlcSwgcmVzLCBhc3luY05leHQpXG4gICAgICAudGhlbihhc3luYyAoKSA9PiB7XG4gICAgICAgIGlmIChuZXh0V2FzQ2FsbGVkKSB7XG4gICAgICAgICAgYXdhaXQgbmV4dFByb21pc2UgLy8gd2UgbXVzdCB3YWl0IHVudGlsIHRoZSByZXR1cm4gaGFuZGxlciBpcyBjYWxsZWRcbiAgICAgICAgICByZXR1cm5IYW5kbGVyQ2FsbGJhY2sobnVsbClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlbmQobnVsbClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgaWYgKHJldHVybkhhbmRsZXJDYWxsYmFjaykge1xuICAgICAgICAgIHJldHVybkhhbmRsZXJDYWxsYmFjayhlcnJvcilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlbmQoZXJyb3IpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createAsyncMiddleware.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createScaffoldMiddleware.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createScaffoldMiddleware.js ***!
  \************************************************************************************************************/
/***/ ((module) => {

eval("module.exports = function createScaffoldMiddleware (handlers) {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method]\n    // if no handler, return\n    if (handler === undefined) {\n      return next()\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === 'function') {\n      return handler(req, res, next, end)\n    }\n    // if handler is some other value, use as result\n    res.result = handler\n    return end()\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvc3JjL2NyZWF0ZVNjYWZmb2xkTWlkZGxld2FyZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3N1YmhhbXJha3NoaXQvRGVza3RvcC9DcmVhdGVOQ29kZS1FU3VtbWl0LTIwMjQvbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvc3JjL2NyZWF0ZVNjYWZmb2xkTWlkZGxld2FyZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZVNjYWZmb2xkTWlkZGxld2FyZSAoaGFuZGxlcnMpIHtcbiAgcmV0dXJuIChyZXEsIHJlcywgbmV4dCwgZW5kKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlciA9IGhhbmRsZXJzW3JlcS5tZXRob2RdXG4gICAgLy8gaWYgbm8gaGFuZGxlciwgcmV0dXJuXG4gICAgaWYgKGhhbmRsZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIG5leHQoKVxuICAgIH1cbiAgICAvLyBpZiBoYW5kbGVyIGlzIGZuLCBjYWxsIGFzIG1pZGRsZXdhcmVcbiAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBoYW5kbGVyKHJlcSwgcmVzLCBuZXh0LCBlbmQpXG4gICAgfVxuICAgIC8vIGlmIGhhbmRsZXIgaXMgc29tZSBvdGhlciB2YWx1ZSwgdXNlIGFzIHJlc3VsdFxuICAgIHJlcy5yZXN1bHQgPSBoYW5kbGVyXG4gICAgcmV0dXJuIGVuZCgpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createScaffoldMiddleware.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/eth-json-rpc-middleware/scaffold.js":
/*!***********************************************************!*\
  !*** ../node_modules/eth-json-rpc-middleware/scaffold.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// for backwards compat\nmodule.exports = __webpack_require__(/*! json-rpc-engine/src/createScaffoldMiddleware */ \"(ssr)/../node_modules/eth-json-rpc-middleware/node_modules/json-rpc-engine/src/createScaffoldMiddleware.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL3NjYWZmb2xkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esc01BQXdFIiwic291cmNlcyI6WyIvVXNlcnMvc3ViaGFtcmFrc2hpdC9EZXNrdG9wL0NyZWF0ZU5Db2RlLUVTdW1taXQtMjAyNC9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLW1pZGRsZXdhcmUvc2NhZmZvbGQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZm9yIGJhY2t3YXJkcyBjb21wYXRcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnanNvbi1ycGMtZW5naW5lL3NyYy9jcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUnKVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/eth-json-rpc-middleware/scaffold.js\n");

/***/ })

};
;